/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import {Vector3} from "three";
import React, { useRef, useState, useEffect } from 'react'
import {useAnimations, useGLTF, SpotLight} from '@react-three/drei'
import {useFrame, useThree} from "@react-three/fiber";

export default function Model(props) {
    const group = useRef()
    const { nodes, materials, animations } = useGLTF('./b12.gltf')

    //Animation setting
    const { actions, mixer  } = useAnimations(animations, group)
    useEffect(() => {
        for (const anim in actions) {
            actions[anim].setLoop(THREE.LoopOnce)
        }

    }, [mixer]);
    const { scene } = useThree();
    const targetObj = scene.getObjectByName("targetObject")
    const B12 = scene.getObjectByName("B12")
    const oldObjY = 3.56
    const oldObjZ = -2.44

    useFrame((state) => {
        //lightPosition
        targetObj.visible = false
        targetObj.position.z = oldObjZ -  -state.mouse.x*4
        targetObj.position.y = oldObjY - -state.mouse.y
        //rotationB12
    })

    return (

        // <group {...props} dispose={null}>
        //     <group rotation={[0, 0, 0]} scale={30} >
        //         <group rotation={[0, 0, 0]}>
        //             <mesh geometry={nodes.Object_0.geometry} material={materials.M_Drone} />
        //             <mesh geometry={nodes.Object_0_1.geometry} material={materials.M_eye_drone_Inst} />
        //             <spotLight castShadow  intensity={props.Light} angle={0.2} penumbra={1} decay={2} position={[0, 0, -.01]} rotation={[Math.PI, 0, 0]} scale={0.09} />
        //         </group>
        //     </group>
        // </group>
        <group ref={group} {...props} dispose={null} position={[-1, 1.08, -3.05]}>
            <group name="Scene">
                <group rotation={[-Math.PI / 2, 0 , Math.PI]} scale={4}>
                    <group name="root">
                        <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 1, 3.14]}>
                            <group name="Drone_StaticMesh_0">
                                <group name="B12" rotation={[Math.PI,Math.PI , 0]}>
                                    <mesh name="Object_0" castShadow receiveShadow geometry={nodes.Object_0.geometry} material={materials.M_Drone} />
                                    <mesh name="Object_0_1"  receiveShadow geometry={nodes.Object_0_1.geometry} material={materials.M_eye_drone_Inst} />
                                    {/*<SpotLight name="Spot"  castShadow target={targetObj} distance={40} angle={.30}  anglePower={15} attenuation={props.Light} intensity={props.Light} penumbra={.7} decay={1.4} position={[0, 0.01, 0.04]} rotation={[Math.PI, 0, 0]} scale={0.09}>*/}
                                    {/*    <group position={[0, 0, -1]} />*/}
                                    {/*</SpotLight>*/}
                                </group>
                                <spotLight castShadow intensity={.9}  position={[1, 1, 0]} penumbra={1}/>
                                <spotLight castShadow intensity={.9} position={[-1, 1, 0]} penumbra={1}/>
                            </group>
                        </group>
                    </group>
                </group>
            </group>
        </group>
    )

}


useGLTF.preload('./b12.gltf')
